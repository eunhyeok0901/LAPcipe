<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
	
<sqlMap namespace="board">

<!-- 동적으로 문장이 삽입될 수 있게 해줌 -->
<sql id="dynamicCondition">
   <dynamic prepend=" where ">
       <isNotEmpty property="stype"  prepend=" and ">
          <isNotEmpty property="sword">
                  $stype$  like '%'||#sword#||'%'
          </isNotEmpty>
       </isNotEmpty>
   </dynamic>
 </sql>


	<select id="listByPage" resultClass="boardVO" parameterClass="map">
		select A.* from 
		 (select rownum as rnum , B.* from 
		 	(select * from board 
		   	  	<include refid="dynamicCondition"/> 
		      order by board_no desc) B
		  	    
		<![CDATA[
		  	  where rownum <= #end#) A
		where A.rnum >= #start#
	    ]]>  
	</select>
	
	<select id="totalCount" parameterClass="map" resultClass="int">
		select count(*) from board
 		 <include refid="dynamicCondition"/> 
	</select>
		
	<!-- 게시글 삭제 -->
	<delete id = "deleteBoard" parameterClass ="int">
		delete from board where board_no = #data#
	</delete>

	<!-- 저장하기 insert(result가 없다) >> update(result는 성공갯수를 뜻하는  int이다) -->
	<update id="insertBoard" parameterClass="boardVO">
		insert into board(
					board_no, board_date, board_con, board_title, mem_id)
		values(board_seq.nextval, sysdate, #board_con#, #board_title#, #mem_id#)
	</update>
	
	<!-- 댓글 저장 -->
	<update id="replySave" parameterClass="replyVO">
		insert into board_answer(
					com_no, board_no, com_con, com_name)
		 values(board_answer_seq.nextval, #board_no#, #com_con#, #com_name#)
	</update>
	
	<!-- 댓글 리스트 -->
	<select id="replyList" parameterClass="int" resultClass = "replyVO">
		select * from board_answer where board_no = #data#
	</select>
	
	<!-- 댓글 삭제 -->
	<delete id = "replyDelete" parameterClass ="int">
		delete from board_answer where com_no = #data#
	</delete>
	
	<!-- 댓글 수정 -->
	<update id="replyUpdate" parameterClass="map">
		update board_answer set com_con=#com_con# where com_no=#com_no#
	</update>
	

</sqlMap>	














